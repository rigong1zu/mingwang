apiVersion: zeabur.com/v1
kind: Template
metadata:
  name: ChatNio
spec:
  description: 🥳 Next Generation AI One-Stop Solution
  icon: https://chatnio.com/logo.png
  coverImage: https://github.com/Deeptrain-Community/chatnio/raw/main/screenshot/chatnio.png
  variables:
    - key: PUBLIC_DOMAIN
      type: DOMAIN
      name: Domain
      description: What is the domain you want for your Chat Nio?
  tags:
    - ChatGPT
    - API
    - Website
  readme: |-
    # [🥳 Chat Nio](https://chatnio.com)

    #### 🚀 下一代 AIGC 一站式商业解决方案
    #### *“ Chat Nio > [Next Web](https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web) + [One API](https://github.com/songquanpeng/one-api) ”*


    [English](./README.md) · 简体中文 · [官网](https://chatnio.com) · [Discord](https://discord.gg/rpzNSmqaF2) · [部署文档](https://chatnio.com/docs/deploy)


    ## 📝 功能
    1. 🤖️ **丰富模型支持**: 多模型服务商支持 (OpenAI / Anthropic / Gemini / Midjourney 等十余种格式兼容 & 私有化 LLM 支持)
    2. 🤯 **美观 UI 设计**: UI 兼容 PC / Pad / 移动三端，遵循 [Shadcn UI](https://ui.shadcn.com) & [Tremor Charts](https://blocks.tremor.so) 设计规范，丰富美观的界面设计和后台仪表盘
    3. 🎃 **完整 Markdown 支持**: 支持 **LaTeX 公式** / **Mermaid 思维导图** / 表格渲染 / 代码高亮 / 图表绘制 / 进度条等进阶 Markdown 语法支持
    4. 👀 **多主题支持**: 支持多种主题切换，包含亮色主题的**明亮模式**和暗色主题的**深色模式**。 👉 [自定义配色](https://github.com/Deeptrain-Community/chatnio/blob/main/app/src/assets/globals.less)
    5. 📚 **国际化支持**: 支持国际化，支持多语言切换 🇨🇳 🇺🇸 🇯🇵 🇷🇺 👉 欢迎贡献翻译 [Pull Request](https://github.com/Deeptrain-Community/chatnio/pulls) 
    6. 🎨 **文生图支持**: 支持多种文生图模型: **OpenAI DALL-E**✅ & **Midjourney** (支持 **U/V/R** 操作)✅ & Stable Diffusion✅ 等
    7. 📡 **强大对话同步**: **用户 0 成本对话跨端同步支持**，支持**对话分享** (支持链接分享 & 保存为图片 & 分享管理), **无需 WebDav / WebRTC 等依赖和复杂学习成本**
    8. 🎈 **模型市场 & 预设系统**: 支持后台可自定义的模型市场, 可提供模型介绍、标签等参数, 站长可根据情况自定义模型简介。同时支持预设系统，包含 **自定义预设** 和 **云端同步** 功能。
    9. 📖 **丰富文件解析**: **开箱即用**, 支持**所有模型**的文件解析 (PDF / Docx / Pptx / Excel / 图片等格式解析), **支持更多云端图片存储方案** (S3 / R2 / MinIO 等), **支持 OCR 图片识别** 👉 详情参见项目 [Chat Nio Blob Service](https://github.com/Deeptrain-Community/chatnio-blob-service) (支持 Vercel / Docker 一键部署)
    10. 🌏 **全模型联网搜索**: 基于 [SearXNG](https://github.com/searxng/searxng) 开源引擎, 支持 Google / Bing / DuckDuckGo / Yahoo / WikiPedia / Arxiv / Qwant 等丰富搜索引擎搜索, 支持安全搜索模式, 内容截断, 图片代理, 测试搜索可用性等功能。
    11. 💕 **渐进式 Web 应用 (PWA)**: 支持 PWA 应用 & 支持桌面端 (桌面端基于 [Tauri](https://github.com/tauri-apps/tauri))
    12. 🤩 **齐全后台管理**: 支持美观丰富的仪表盘, 公告 & 通知管理, 用户管理, 订阅管理, 礼品码 & 兑换码管理, 价格设定, 订阅设定, 自定义模型市场, 自定义站点名称 & Logo, SMTP 发件设置等功能
    13. 🤑 **多种计费方式**: 支持 💴 **订阅制** 和 💴 **弹性计费** 两种计费方式, 弹性计费支持 次数计费 / Token 计费 / 不计费 / 可匿名调用 和 **最小请求点数** 检测等强大功能
    14. 🎉 **创新模型缓存**: 支持开启模型缓存：即同一个请求入参 Hash 下, 如果之前已请求过, 将直接返回缓存结果 (击中缓存将不计费), 减少请求次数。可自行自定义是否缓存的模型、缓存时间、多种缓存结果数等高级缓存设置
    15. 🥪 **附加功能** (停止支持): 🍎 **AI 项目生成器功能** / 📂 **批量文章生成功能** / 🥪 **AI 卡片功能** (已废弃)
    16. 😎 **优秀渠道管理**: 自写优秀渠道算法, 支持⚡ **多渠道管理**, 支持🥳**优先级**设置渠道的调用顺序, 支持🥳**权重**设置同一优先级下的渠道均衡负载分配概率, 支持🥳**用户分组**, 🥳**失败自动重试**, 🥳**模型重定向**, 🥳**内置上游隐藏**, 🥳**渠道状态管理**等强大**企业级功能**
    17. ⭐ **OpenAI API 分发 & 中转系统**: 支持以 **OpenAI API** 标准格式调用各种大模型, 集成强大的渠道管理功能, 仅需部署一个站点即可实现同时发展 B/C 端业务💖
    18. 👌 **快速同步上游**: 渠道设置、模型市场、价格设定等设置都可快速同步上游站点，以此基础修改自己的站点配置，快速搭建自己的站点，省时省力，一键同步，快速上线
    19. 👋 **SEO 优化**: 支持 SEO 优化，支持自定义站点名称、站点 Logo 等 SEO 优化设设置使搜索引擎更快的爬取，你的站点与众不同👋
    20. 🎫 **多种兑换码体系**: 支持多种兑换码体系，支持礼品码和兑换码，支持批量生成，礼品码适合宣传分发，兑换码适合发卡销售，礼品码一个类型的多个码一个用户仅能兑换一个码，在宣传中一定程度上减少一个用户兑换多次的情况😀
    21. 🥰 **商用友好协议**: 采用 **Apache-2.0** 开源协议, 商用二开 & 分发友好 (也请遵守 Apache-2.0 协议的规定, 请勿用于违法用途)

    ## 🔨 支持模型
    1. OpenAI & Azure OpenAI *(✅ Vision ✅ Function Calling)*
    2. Anthropic Claude *(✅ Vision ✅ Function Calling)*
    3. Google Gemini & PaLM2 *(✅ Vision)*
    4. Midjourney *(✅ Mode Toggling ✅ U/V/R Actions)*
    5. 讯飞星火 SparkDesk *(✅ Vision ✅ Function Calling)*
    6. 智谱清言 ChatGLM *(✅ Vision)*
    7. 通义千问 Tongyi Qwen
    8. 腾讯混元 Tencent Hunyuan
    9. 百川大模型 Baichuan AI
    10. 月之暗面 Moonshot AI (👉 OpenAI)
    11. 深度求索 DeepSeek AI (👉 OpenAI)
    12. 字节云雀 ByteDance Skylark *(✅ Function Calling)*
    13. Groq Cloud AI
    14. OpenRouter (👉 OpenAI)
    15. 360 GPT
    16. LocalAI / Ollama (👉 OpenAI)

    ## 👻 中转 OpenAI 兼容 API
       - [x] Chat Completions _(/v1/chat/completions)_
       - [x] Image Generation _(/v1/images)_
       - [x] Model List _(/v1/models)_
       - [x] Dashboard Billing _(/v1/billing)_

    ## 🧪 部署
    1. 填入你想要绑定的域名，并点击部署。
    2. 部署成功后，默认管理用户名为 `root`，管理密码为 `chatnio123456`，请根据提示尽快更换初始密码。

    更多更新功能和部署手册请查看 👉 [Chat Nio (Github)](https://github.com/Deeptrain-Community/chatnio)
  services:
    - name: Redis
      icon: https://raw.githubusercontent.com/zeabur/service-icons/main/marketplace/redis.svg
      template: PREBUILT
      spec:
        source:
          image: redis/redis-stack-server:latest
        ports:
          - id: database
            port: 6379
            type: TCP
        volumes:
          - id: data
            dir: /data
        instructions:
          - type: TEXT
            title: Command to connect to your Redis
            content: redis-cli -h ${PORT_FORWARDED_HOSTNAME} -p ${DATABASE_PORT_FORWARDED_PORT} -a ${REDIS_PASSWORD}
          - type: TEXT
            title: Redis Connection String
            content: redis://:${REDIS_PASSWORD}@${PORT_FORWARDED_HOSTNAME}:${DATABASE_PORT_FORWARDED_PORT}
          - type: PASSWORD
            title: Redis password
            content: ${REDIS_PASSWORD}
            category: Credentials
          - type: TEXT
            title: Redis host
            content: ${PORT_FORWARDED_HOSTNAME}
            category: Hostname & Port
          - type: TEXT
            title: Redis port
            content: ${DATABASE_PORT_FORWARDED_PORT}
            category: Hostname & Port
        env:
          REDIS_ARGS:
            default: --requirepass ${REDIS_PASSWORD}
          REDIS_CONNECTION_STRING:
            default: redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
            expose: true
            readonly: true
          REDIS_HOST:
            default: ${CONTAINER_HOSTNAME}
            expose: true
            readonly: true
          REDIS_PASSWORD:
            default: ${PASSWORD}
            expose: true
          REDIS_PORT:
            default: ${DATABASE_PORT}
            expose: true
            readonly: true
          REDIS_URI:
            default: ${REDIS_CONNECTION_STRING}
            expose: true
            readonly: true
    - name: MySQL
      icon: https://raw.githubusercontent.com/zeabur/service-icons/main/marketplace/mysql.svg
      template: PREBUILT
      spec:
        source:
          image: mysql:8.0.33
        ports:
          - id: database
            port: 3306
            type: TCP
        volumes:
          - id: data
            dir: /var/lib/mysql
        instructions:
          - type: TEXT
            title: Command to connect to your MySQL
            content: mysqlsh --sql --host=${PORT_FORWARDED_HOSTNAME} --port=${DATABASE_PORT_FORWARDED_PORT} --user=${MYSQL_USERNAME} --password=${MYSQL_PASSWORD} --schema=${MYSQL_DATABASE}
          - type: TEXT
            title: MySQL username
            content: ${MYSQL_USERNAME}
            category: Credentials
          - type: PASSWORD
            title: MySQL password
            content: ${MYSQL_PASSWORD}
            category: Credentials
          - type: TEXT
            title: MySQL database
            content: ${MYSQL_DATABASE}
            category: Credentials
          - type: TEXT
            title: MySQL host
            content: ${PORT_FORWARDED_HOSTNAME}
            category: Hostname & Port
          - type: TEXT
            title: MySQL port
            content: ${DATABASE_PORT_FORWARDED_PORT}
            category: Hostname & Port
        env:
          MYSQL_DATABASE:
            default: zeabur
            expose: true
          MYSQL_HOST:
            default: ${CONTAINER_HOSTNAME}
            expose: true
            readonly: true
          MYSQL_PASSWORD:
            default: ${MYSQL_ROOT_PASSWORD}
            expose: true
            readonly: true
          MYSQL_PORT:
            default: ${DATABASE_PORT}
            expose: true
            readonly: true
          MYSQL_ROOT_PASSWORD:
            default: ${PASSWORD}
          MYSQL_USERNAME:
            default: root
            expose: true
            readonly: true
        configs:
          - path: /etc/my.cnf
            template: |
              [mysqld]
              default-authentication-plugin=mysql_native_password
              skip-host-cache
              skip-name-resolve
              datadir=/var/lib/mysql
              socket=/var/run/mysqld/mysqld.sock
              secure-file-priv=/var/lib/mysql-files
              user=mysql
              max_allowed_packet=10M
              
              pid-file=/var/run/mysqld/mysqld.pid
              [client]
              socket=/var/run/mysqld/mysqld.sock
              
              !includedir /etc/mysql/conf.d/
    - name: ChatNio
      icon: https://chatnio.com/logo.png
      template: PREBUILT
      spec:
        source:
          image: programzmh/chatnio
        ports:
          - id: service
            port: 8094
            type: HTTP
        volumes:
          - id: logs
            dir: /logs
          - id: config
            dir: /config
          - id: storage
            dir: /storage
      domainKey: PUBLIC_DOMAIN
localization:
  zh-CN:
    description: 🥳 下一代 AI 一站式解决方案
    variables:
      - key: PUBLIC_DOMAIN
        type: DOMAIN
        name: 域名
        description: 你想将 ChatNio 绑定在哪个域名上？
    readme: |-
      # [🥳 Chat Nio](https://chatnio.com)

      #### 🚀 下一代 AIGC 一站式商业解决方案
      #### *“ Chat Nio > [Next Web](https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web) + [One API](https://github.com/songquanpeng/one-api) ”*


      [English](./README.md) · 简体中文 · [官网](https://chatnio.com) · [Discord](https://discord.gg/rpzNSmqaF2) · [部署文档](https://chatnio.com/docs/deploy)

      ## 📝 功能
      1. 🤖️ **丰富模型支持**: 多模型服务商支持 (OpenAI / Anthropic / Gemini / Midjourney 等十余种格式兼容 & 私有化 LLM 支持)
      2. 🤯 **美观 UI 设计**: UI 兼容 PC / Pad / 移动三端，遵循 [Shadcn UI](https://ui.shadcn.com) & [Tremor Charts](https://blocks.tremor.so) 设计规范，丰富美观的界面设计和后台仪表盘
      3. 🎃 **完整 Markdown 支持**: 支持 **LaTeX 公式** / **Mermaid 思维导图** / 表格渲染 / 代码高亮 / 图表绘制 / 进度条等进阶 Markdown 语法支持
      4. 👀 **多主题支持**: 支持多种主题切换，包含亮色主题的**明亮模式**和暗色主题的**深色模式**。 👉 [自定义配色](https://github.com/Deeptrain-Community/chatnio/blob/main/app/src/assets/globals.less)
      5. 📚 **国际化支持**: 支持国际化，支持多语言切换 🇨🇳 🇺🇸 🇯🇵 🇷🇺 👉 欢迎贡献翻译 [Pull Request](https://github.com/Deeptrain-Community/chatnio/pulls) 
      6. 🎨 **文生图支持**: 支持多种文生图模型: **OpenAI DALL-E**✅ & **Midjourney** (支持 **U/V/R** 操作)✅ & Stable Diffusion✅ 等
      7. 📡 **强大对话同步**: **用户 0 成本对话跨端同步支持**，支持**对话分享** (支持链接分享 & 保存为图片 & 分享管理), **无需 WebDav / WebRTC 等依赖和复杂学习成本**
      8. 🎈 **模型市场 & 预设系统**: 支持后台可自定义的模型市场, 可提供模型介绍、标签等参数, 站长可根据情况自定义模型简介。同时支持预设系统，包含 **自定义预设** 和 **云端同步** 功能。
      9. 📖 **丰富文件解析**: **开箱即用**, 支持**所有模型**的文件解析 (PDF / Docx / Pptx / Excel / 图片等格式解析), **支持更多云端图片存储方案** (S3 / R2 / MinIO 等), **支持 OCR 图片识别** 👉 详情参见项目 [Chat Nio Blob Service](https://github.com/Deeptrain-Community/chatnio-blob-service) (支持 Vercel / Docker 一键部署)
      10. 🌏 **全模型联网搜索**: 基于 [SearXNG](https://github.com/searxng/searxng) 开源引擎, 支持 Google / Bing / DuckDuckGo / Yahoo / WikiPedia / Arxiv / Qwant 等丰富搜索引擎搜索, 支持安全搜索模式, 内容截断, 图片代理, 测试搜索可用性等功能。
      11. 💕 **渐进式 Web 应用 (PWA)**: 支持 PWA 应用 & 支持桌面端 (桌面端基于 [Tauri](https://github.com/tauri-apps/tauri))
      12. 🤩 **齐全后台管理**: 支持美观丰富的仪表盘, 公告 & 通知管理, 用户管理, 订阅管理, 礼品码 & 兑换码管理, 价格设定, 订阅设定, 自定义模型市场, 自定义站点名称 & Logo, SMTP 发件设置等功能
      13. 🤑 **多种计费方式**: 支持 💴 **订阅制** 和 💴 **弹性计费** 两种计费方式, 弹性计费支持 次数计费 / Token 计费 / 不计费 / 可匿名调用 和 **最小请求点数** 检测等强大功能
      14. 🎉 **创新模型缓存**: 支持开启模型缓存：即同一个请求入参 Hash 下, 如果之前已请求过, 将直接返回缓存结果 (击中缓存将不计费), 减少请求次数。可自行自定义是否缓存的模型、缓存时间、多种缓存结果数等高级缓存设置
      15. 🥪 **附加功能** (停止支持): 🍎 **AI 项目生成器功能** / 📂 **批量文章生成功能** / 🥪 **AI 卡片功能** (已废弃)
      16. 😎 **优秀渠道管理**: 自写优秀渠道算法, 支持⚡ **多渠道管理**, 支持🥳**优先级**设置渠道的调用顺序, 支持🥳**权重**设置同一优先级下的渠道均衡负载分配概率, 支持🥳**用户分组**, 🥳**失败自动重试**, 🥳**模型重定向**, 🥳**内置上游隐藏**, 🥳**渠道状态管理**等强大**企业级功能**
      17. ⭐ **OpenAI API 分发 & 中转系统**: 支持以 **OpenAI API** 标准格式调用各种大模型, 集成强大的渠道管理功能, 仅需部署一个站点即可实现同时发展 B/C 端业务💖
      18. 👌 **快速同步上游**: 渠道设置、模型市场、价格设定等设置都可快速同步上游站点，以此基础修改自己的站点配置，快速搭建自己的站点，省时省力，一键同步，快速上线
      19. 👋 **SEO 优化**: 支持 SEO 优化，支持自定义站点名称、站点 Logo 等 SEO 优化设设置使搜索引擎更快的爬取，你的站点与众不同👋
      20. 🎫 **多种兑换码体系**: 支持多种兑换码体系，支持礼品码和兑换码，支持批量生成，礼品码适合宣传分发，兑换码适合发卡销售，礼品码一个类型的多个码一个用户仅能兑换一个码，在宣传中一定程度上减少一个用户兑换多次的情况😀
      21. 🥰 **商用友好协议**: 采用 **Apache-2.0** 开源协议, 商用二开 & 分发友好 (也请遵守 Apache-2.0 协议的规定, 请勿用于违法用途)

      ## 🔨 支持模型
      1. OpenAI & Azure OpenAI *(✅ Vision ✅ Function Calling)*
      2. Anthropic Claude *(✅ Vision ✅ Function Calling)*
      3. Google Gemini & PaLM2 *(✅ Vision)*
      4. Midjourney *(✅ Mode Toggling ✅ U/V/R Actions)*
      5. 讯飞星火 SparkDesk *(✅ Vision ✅ Function Calling)*
      6. 智谱清言 ChatGLM *(✅ Vision)*
      7. 通义千问 Tongyi Qwen
      8. 腾讯混元 Tencent Hunyuan
      9. 百川大模型 Baichuan AI
      10. 月之暗面 Moonshot AI (👉 OpenAI)
      11. 深度求索 DeepSeek AI (👉 OpenAI)
      12. 字节云雀 ByteDance Skylark *(✅ Function Calling)*
      13. Groq Cloud AI
      14. OpenRouter (👉 OpenAI)
      15. 360 GPT
      16. LocalAI / Ollama (👉 OpenAI)

      ## 👻 中转 OpenAI 兼容 API
         - [x] Chat Completions _(/v1/chat/completions)_
         - [x] Image Generation _(/v1/images)_
         - [x] Model List _(/v1/models)_
         - [x] Dashboard Billing _(/v1/billing)_

      ## 🧪 部署
      1. 填入你想要绑定的域名，并点击部署。
      2. 部署成功后，默认管理用户名为 `root`，管理密码为 `chatnio123456`，请根据提示尽快更换初始密码。

      更多更新功能和部署手册请查看 👉 [Chat Nio (Github)](https://github.com/Deeptrain-Community/chatnio)
